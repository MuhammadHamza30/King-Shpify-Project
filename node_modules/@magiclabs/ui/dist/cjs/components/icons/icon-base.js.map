{"version":3,"file":"icon-base.js","sources":["../../../../src/components/icons/icon-base.tsx"],"sourcesContent":["import React, { PropsWithChildren, createContext, useContext, useMemo } from 'react';\nimport { clsx } from '../../libs/clsx';\nimport { forwardRefWrapper } from '../../libs/forward-ref-wrapper';\nimport { Theme } from '../../libs/theme';\nimport { IntrinsicElementProps } from '../../types/utility';\nimport { useTheme } from '../theme-provider';\n\nimport styles from './icon-base.less';\n\n// --- Shared icon context -------------------------------------------------- //\n\ninterface IconColorContext extends PropsWithChildren {\n  colorA: string;\n  colorB: string;\n  opacityA: number;\n  opacityB: number;\n}\n\nconst defaultIconColorContext: IconColorContext = {\n  colorA: 'var(--mg__Icon_colorA)',\n  colorB: 'var(--mg__Icon_colorB)',\n  opacityA: 1,\n  opacityB: 1,\n};\n\nconst IconColorContext = /* @__PURE__ */ createContext<IconColorContext>(defaultIconColorContext);\n\n/**\n * Creates a React context that overrides the fallback\n * color properties of icons rendered within.\n */\nexport const IconColorProvider: React.FC<Partial<IconColorContext>> = (props) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <IconColorContext.Provider value={{ ...defaultIconColorContext, ...otherProps }}>\n      {children}\n    </IconColorContext.Provider>\n  );\n};\n\n// --- Monochrome Icons ----------------------------------------------------- //\n\ntype MonochromeSVGContents = React.FC<{\n  fill: { fill: string; fillOpacity: number };\n  stroke: { stroke: string; strokeOpacity: number };\n  theme: Theme;\n}>;\n\nexport interface MonochromeIconDefinition {\n  SVGContents: MonochromeSVGContents;\n  viewbox: [number, number, number, number];\n  color?: string | ((theme: Theme) => string);\n  opacity?: number | ((theme: Theme) => number);\n}\n\ninterface MonochromeColor {\n  color?: string;\n  opacity?: number;\n}\n\ninterface MonochromeIconBaseProps extends MonochromeColor, IntrinsicElementProps<'span'> {\n  type: MonochromeIconDefinition;\n  size?: number | { width?: number; height?: number };\n  disabled?: boolean;\n  inline?: boolean;\n}\n\nconst MonochromeIcon = /* @__PURE__ */ forwardRefWrapper<HTMLSpanElement, MonochromeIconBaseProps>(\n  'Icon',\n\n  { inline: true },\n\n  (props, externalRef) => {\n    const { type, color, opacity, size, disabled, inline, className, ...otherProps } = props;\n\n    const theme = useTheme();\n\n    const [viewboxX, viewboxY, viewboxWidth, viewboxHeight] = type.viewbox;\n    const propWidth = typeof size === 'number' ? size : size?.width;\n    const propHeight = typeof size === 'number' ? size : size?.height;\n    const { width, height } = useAspectRatio(type.viewbox, propWidth, propHeight);\n\n    // --- Color/opacity values\n\n    const currentColor = color ?? useDefaultValue(theme, type.color) ?? useContext(IconColorContext).colorA;\n    const currentOpacity = opacity ?? useDefaultValue(theme, type.opacity) ?? useContext(IconColorContext).opacityA;\n\n    return (\n      <span\n        className={clsx([styles.IconBase, inline && styles.inline, className])}\n        aria-hidden=\"true\"\n        {...otherProps}\n        ref={externalRef}\n      >\n        <svg\n          width={typeof size === 'number' ? size : width}\n          height={typeof size === 'number' ? size : height}\n          viewBox={`${viewboxX} ${viewboxY} ${viewboxWidth} ${viewboxHeight}`}\n          fill=\"none\"\n          stroke=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <type.SVGContents\n            fill={useSVGProps('fill', currentColor, currentOpacity)}\n            stroke={useSVGProps('stroke', currentColor, currentOpacity)}\n            theme={theme}\n          />\n        </svg>\n      </span>\n    );\n  },\n);\n\n// --- Duotone Icons -------------------------------------------------------- //\n\ntype DuotoneSVGContents = React.FC<{\n  fillA: { fill: string; fillOpacity: number };\n  fillB: { fill: string; fillOpacity: number };\n  strokeA: { stroke: string; strokeOpacity: number };\n  strokeB: { stroke: string; strokeOpacity: number };\n  theme: Theme;\n}>;\n\nexport interface DuotoneIconDefinition {\n  SVGContents: DuotoneSVGContents;\n  viewbox: [number, number, number, number];\n  colorA?: string | ((theme: Theme) => string);\n  colorB?: string | ((theme: Theme) => string);\n  opacityA?: number | ((theme: Theme) => number);\n  opacityB?: number | ((theme: Theme) => number);\n}\n\ninterface DuotoneColor {\n  colorA?: string;\n  colorB?: string;\n  opacityA?: number;\n  opacityB?: number;\n}\n\ninterface DuotoneIconBaseProps extends DuotoneColor, IntrinsicElementProps<'span'> {\n  type: DuotoneIconDefinition;\n  size?: number | { width?: number; height?: number };\n  disabled?: boolean;\n  inline?: boolean;\n}\n\nconst DuotoneIcon = /* @__PURE__ */ forwardRefWrapper<HTMLSpanElement, DuotoneIconBaseProps>(\n  'Icon.Duotone',\n\n  { inline: true },\n\n  (props, externalRef) => {\n    const { type, colorA, colorB, opacityA, opacityB, size, disabled, inline, className, ...otherProps } = props;\n\n    const theme = useTheme();\n\n    const [viewboxX, viewboxY, viewboxWidth, viewboxHeight] = type.viewbox;\n    const propWidth = typeof size === 'number' ? size : size?.width;\n    const propHeight = typeof size === 'number' ? size : size?.height;\n    const { width, height } = useAspectRatio(type.viewbox, propWidth, propHeight);\n\n    // --- \"A\" color/opacity values\n\n    const currentColorA = colorA ?? useDefaultValue(theme, type.colorA) ?? useContext(IconColorContext).colorA;\n    const currentOpacityA = opacityA ?? useDefaultValue(theme, type.opacityA) ?? useContext(IconColorContext).opacityA;\n\n    // --- \"B\" color/opacity values\n\n    const currentColorB = colorB ?? useDefaultValue(theme, type.colorB) ?? useContext(IconColorContext).colorB;\n    const currentOpacityB = opacityB ?? useDefaultValue(theme, type.opacityB) ?? useContext(IconColorContext).opacityB;\n\n    return (\n      <span\n        className={clsx([styles.IconBase, inline && styles.inline, className])}\n        aria-hidden=\"true\"\n        {...otherProps}\n        ref={externalRef}\n      >\n        <svg\n          width={typeof size === 'number' ? size : width}\n          height={typeof size === 'number' ? size : height}\n          viewBox={`${viewboxX} ${viewboxY} ${viewboxWidth} ${viewboxHeight}`}\n          fill=\"none\"\n          stroke=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <type.SVGContents\n            fillA={useSVGProps('fill', currentColorA, currentOpacityA)}\n            fillB={useSVGProps('fill', currentColorB, currentOpacityB)}\n            strokeA={useSVGProps('stroke', currentColorA, currentOpacityA)}\n            strokeB={useSVGProps('stroke', currentColorB, currentOpacityB)}\n            theme={theme}\n          />\n        </svg>\n      </span>\n    );\n  },\n);\n\n// --- Combined icon component ---------------------------------------------- //\n\nexport const Icon = /* @__PURE__ */ Object.assign(MonochromeIcon, { Duotone: DuotoneIcon });\n\n// --- Utilities ------------------------------------------------------------ //\n\n/**\n * Returns a memoized value representing\n * the default icon color or opacity.\n */\nfunction useDefaultValue<T>(theme: Theme | null, resolver: T | ((theme: Theme) => T)): T {\n  return useMemo(() => (typeof resolver === 'function' ? (resolver as any)(theme) : resolver), [theme?.key]);\n}\n\n/**\n * Returns memoized SVG props for `stroke` or `fill` properties.\n */\nfunction useSVGProps(property: 'fill', color: string, opacity: number): { fill: string; fillOpacity: number };\nfunction useSVGProps(property: 'stroke', color: string, opacity: number): { stroke: string; strokeOpacity: number };\nfunction useSVGProps(property: 'stroke' | 'fill', color: string, opacity: number): any {\n  return useMemo<any>(() => ({ [property]: color, [`${property}Opacity`]: opacity }), [color, opacity]);\n}\n\n/**\n * From the given `viewbox`, calculates a\n * width and height value that respects the\n * icon's aspect ratio.\n */\nfunction useAspectRatio(viewbox: [number, number, number, number], propWidth?: number, propHeight?: number) {\n  const viewboxWidth = viewbox[2];\n  const viewboxHeight = viewbox[3];\n\n  let width = Math.ceil(propWidth ?? viewboxWidth);\n  let height = Math.ceil(propHeight ?? viewboxHeight);\n  const aspectRatio = viewboxWidth / viewboxHeight;\n\n  if (!!propWidth && !propHeight) height = Math.ceil(width / aspectRatio);\n  if (!!propHeight && !propWidth) width = Math.ceil(height * aspectRatio);\n\n  return { width, height };\n}\n"],"names":["createContext","__rest","React","forwardRefWrapper","useTheme","useContext","clsx","styles","useMemo"],"mappings":"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"}