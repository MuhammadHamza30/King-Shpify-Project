'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var framerMotion = require('framer-motion');
var React = require('react');
require('../../primitives/call-to-action/call-to-action.js');
require('react-aria');
require('@seznam/compose-react-refs');
require('@react-aria/ssr');
var clsx = require('clsx');
var flexbox = require('../../layout/flexbox/flexbox.js');
var inset = require('../../layout/inset/inset.js');
var transitions = require('../../../hooks/transitions.js');
require('blueimp-md5');
require('color');
require('@artsy/fresnel');
require('../../theme-provider/theme-provider.js');
require('../../theme-provider/theme-head.js');
require('usable-react');
require('watch-resize');
require('react-dom');
require('react-popper');
var iconBase = require('../../icons/icon-base.js');
var exclaim = require('../../icons/monochrome/exclaim.js');
var info = require('../../icons/monochrome/info.js');
var remove = require('../../icons/monochrome/remove.js');
var successFilled = require('../../icons/monochrome/success-filled.js');
var warning = require('../../icons/monochrome/warning.js');
require('react-stately');
require('../../../libs/collections.js');
require('../../primitives/text-button/text-button.js');
var alert = require('./alert.less.js');
require('../announcer.js');
require('../../primitives/radio/radio.js');
require('../../primitives/skeleton/skeleton.js');
require('../../primitives/typography/typography.js');
require('../../primitives/button-v2/button-v2.js');
require('ua-parser-js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

const Alert = (props) => {
    const { label, type = 'important', icon = true, dismissable = false, children } = props;
    const [dismissed, setDismissed] = React__default["default"].useState(false);
    const getScaleProps = transitions.transitions.useScale();
    let iconType;
    switch (type) {
        case 'success':
            iconType = successFilled.SuccessFilled;
            break;
        case 'warning':
            iconType = warning.Warning;
            break;
        case 'error':
            iconType = exclaim.Exclaim;
            break;
        case 'neutral':
            iconType = info.Info;
            break;
        case 'important':
        default:
            iconType = info.Info;
            break;
    }
    return (React__default["default"].createElement(framerMotion.AnimatePresence, { initial: false }, !dismissed && (React__default["default"].createElement(framerMotion.motion.div, Object.assign({ className: clsx__default["default"]([alert["default"].Alert, alert["default"][type]]) }, getScaleProps(0.85)),
        React__default["default"].createElement(flexbox.Flex.Row, { vertical: "flex-start", style: { width: '100%' } },
            icon && (React__default["default"].createElement(inset.Inset, { top: 2 },
                React__default["default"].createElement(iconBase.Icon, { size: 20, type: iconType, className: alert["default"].icon }))),
            React__default["default"].createElement(flexbox.Flex.Item, { grow: 1, role: "status", className: alert["default"].message },
                label && React__default["default"].createElement("div", { className: alert["default"].label }, label),
                children),
            dismissable && (React__default["default"].createElement(inset.Inset, { top: 2 },
                React__default["default"].createElement("button", { className: alert["default"].dismissable, type: "button", onClick: () => setDismissed(true) },
                    React__default["default"].createElement(iconBase.Icon, { size: 20, type: remove.Remove })))))))));
};

exports.Alert = Alert;
//# sourceMappingURL=alert.js.map
