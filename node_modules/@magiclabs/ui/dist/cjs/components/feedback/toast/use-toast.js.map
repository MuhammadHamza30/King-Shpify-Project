{"version":3,"file":"use-toast.js","sources":["../../../../../src/components/feedback/toast/use-toast.ts"],"sourcesContent":["import { useContext, createContext } from 'react';\nimport { createErrorWithCode } from '../../../libs/exceptions';\n\nexport interface ToastDefinition {\n  id: number;\n  message: string;\n  messageOnly?: boolean;\n  type: 'info' | 'success' | 'warning' | 'error';\n}\n\nexport interface CreateToastOptions {\n  message: string;\n  messageOnly?: boolean;\n  type?: ToastDefinition['type'];\n  lifespan?: number;\n}\n\nexport interface ToastContext {\n  createToast: (options: CreateToastOptions) => number;\n  removeToast: (id: number) => void;\n}\n\nconst raiseToastError = (fn: 'createToast' | 'removeToast') => () => {\n  throw createErrorWithCode(\n    'TOAST_PROVIDER_REQUIRED',\n    'useToast',\n    `Before calling \\`${fn}\\`, wrap your application with \\`<ToastProvider>\\`.`,\n  );\n};\n\nexport const ToastContext = /* @__PURE__ */ createContext<ToastContext>({\n  createToast: /* @__PURE__ */ raiseToastError('createToast'),\n  removeToast: /* @__PURE__ */ raiseToastError('removeToast'),\n});\n\nexport function useToast() {\n  return useContext(ToastContext);\n}\n"],"names":["createErrorWithCode","createContext","useContext"],"mappings":";;;;;;;AAsBA,MAAM,eAAe,GAAG,CAAC,EAAiC,KAAK,MAAK;IAClE,MAAMA,8BAAmB,CACvB,yBAAyB,EACzB,UAAU,EACV,CAAoB,iBAAA,EAAA,EAAE,CAAqD,mDAAA,CAAA,CAC5E,CAAC;AACJ,CAAC,CAAC;AAEW,MAAA,YAAY,mBAAmBC,mBAAa,CAAe;AACtE,IAAA,WAAW,kBAAkB,eAAe,CAAC,aAAa,CAAC;AAC3D,IAAA,WAAW,kBAAkB,eAAe,CAAC,aAAa,CAAC;AAC5D,CAAA,EAAE;SAEa,QAAQ,GAAA;AACtB,IAAA,OAAOC,gBAAU,CAAC,YAAY,CAAC,CAAC;AAClC;;;;;"}