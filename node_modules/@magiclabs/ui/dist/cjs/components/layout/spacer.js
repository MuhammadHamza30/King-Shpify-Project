'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../_virtual/_tslib.js');
var React = require('react');
var forwardRefWrapper = require('../../libs/forward-ref-wrapper.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const spacingPreset = {
    'space-0.5': '4px',
    'space-1': '8px',
    'space-1.5': '12px',
    'space-2': '16px',
    'space-3': '24px',
    'space-4': '32px',
    'space-5': '40px',
    'space-6': '48px',
    'space-8': '64px',
    'space-10': '80px',
};
const Spacer = /* @__PURE__ */ forwardRefWrapper.forwardRefWrapper('Spacer', {
    size: 0,
    orientation: 'horizontal',
}, (props, externalRef) => {
    const { size, orientation, inline, spacing, style: otherStyle } = props, otherProps = _tslib.__rest(props, ["size", "orientation", "inline", "spacing", "style"]);
    const spacingSize = spacing ? spacingPreset[spacing] : size;
    const horizontalStyle = { display: inline ? 'inline-block' : 'block', height: '100%', width: spacingSize };
    const verticalStyle = { display: inline ? 'inline-block' : 'block', width: '100%', height: spacingSize };
    const style = orientation === 'vertical' ? verticalStyle : horizontalStyle;
    return React__default["default"].createElement("div", Object.assign({ "aria-hidden": "true", style: Object.assign(Object.assign({}, style), otherStyle) }, otherProps, { ref: externalRef }));
});

exports.Spacer = Spacer;
//# sourceMappingURL=spacer.js.map
