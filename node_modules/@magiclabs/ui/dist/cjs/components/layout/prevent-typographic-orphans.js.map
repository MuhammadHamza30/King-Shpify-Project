{"version":3,"file":"prevent-typographic-orphans.js","sources":["../../../../src/components/layout/prevent-typographic-orphans.tsx"],"sourcesContent":["import React, { PropsWithChildren, useRef } from 'react';\nimport { useEffectAfterMount, useForceUpdate } from 'usable-react';\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect';\n\nconst DEFAULT_TEXT_TAGS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'figcaption'];\nconst DEFAULT_WORD_COUNT_THRESHOLD = 4;\n\ninterface PreventTypographicOrphansProps extends PropsWithChildren {\n  /**\n   * The minimum number of words that must be present in the\n   * full text of a block before orphan control kicks in.\n   */\n  wordCountThreshold?: number;\n\n  /**\n   * HTML tags that should be considered text blocks.\n   */\n  tags?: string[];\n}\n\n/**\n * Automatically injects non-breaking spaces between the last\n * two words of a text block to prevent typographic orphans.\n */\nexport const PreventTypographicOrphans: React.FC<PreventTypographicOrphansProps> = (props) => {\n  const { children, wordCountThreshold = DEFAULT_WORD_COUNT_THRESHOLD, tags = DEFAULT_TEXT_TAGS } = props;\n\n  const ref = useRef<HTMLDivElement | null>(null);\n  const forceUpdate = useForceUpdate();\n\n  // Apply fixes on initial render.\n  useIsomorphicLayoutEffect(() => {\n    applyTypographyFixes(ref.current, tags, wordCountThreshold);\n  }, []);\n\n  // Apply fixes on subsequent renders where the DOM tree has changed.\n  useEffectAfterMount(() => {\n    if (ref.current) {\n      const observer = new MutationObserver((mutations, obs) => {\n        obs.disconnect();\n        const uniqueTargets = [...new Set(mutations.map((mut) => mut.target))];\n        applyTypographyFixes(ref.current, tags, wordCountThreshold, uniqueTargets);\n        forceUpdate();\n      });\n\n      observer.observe(ref.current, {\n        characterData: true,\n        attributes: false,\n        childList: true,\n        subtree: true,\n      });\n\n      return () => observer.disconnect();\n    }\n\n    return undefined;\n  });\n\n  return <div ref={ref}>{children}</div>;\n};\n\n/**\n * Gathers text nodes from the given parent element,\n * checks if orphan control should be applied,\n * then applies the fixes.\n */\nfunction applyTypographyFixes(\n  parentNode: HTMLElement | null,\n  tags: string[],\n  wordCountThreshold: number,\n  targets?: Node[],\n) {\n  if (!parentNode) return;\n\n  const elems: NodeListOf<HTMLElement> = parentNode.querySelectorAll(tags.join(', '));\n\n  elems.forEach((elem) => {\n    if (shouldPreventOrphansCheck(elem, wordCountThreshold, targets)) {\n      preventOrphans(elem);\n    }\n  });\n}\n\n/**\n * Applies fixes to prevent typographic orphans in the given element.\n */\nfunction preventOrphans(elem: HTMLElement) {\n  const reduceFlattenedTextNodes = (acc: ChildNode[], node: ChildNode): ChildNode[] => {\n    switch (node.nodeType) {\n      case Node.ELEMENT_NODE:\n        return [...acc, ...Array.from(node.childNodes).reduce(reduceFlattenedTextNodes, [] as ChildNode[])];\n\n      case Node.TEXT_NODE:\n      default:\n        return [...acc, node];\n    }\n  };\n\n  const flattenedTextNodes = Array.from(elem.childNodes)\n    .reduce(reduceFlattenedTextNodes, [] as ChildNode[])\n    .filter((node) => !!node.nodeValue && !!node.nodeValue?.length)\n    .reverse();\n\n  const targetIndex = getTextItems(elem.innerText).pop()?.length ?? 0;\n\n  let indexCounter = 0;\n\n  const targetTextNode = flattenedTextNodes.find((node) => {\n    indexCounter += node.nodeValue?.length ?? 0;\n    return indexCounter >= targetIndex;\n  });\n\n  if (targetTextNode?.parentElement) {\n    const textItems = getTextItems(targetTextNode.nodeValue!);\n\n    // Target the last word\n    const targetWord = textItems[textItems.length - 1];\n\n    // Prefix with a non-breaking space\n    textItems[textItems.length - 1] = `\\u{00A0}${targetWord}`;\n\n    // Join the words back together.\n    // We `pop` the last word from `textItems` to avoid joining the result with\n    // an obsolete whitespace character.\n    const lastWord = textItems.pop();\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const result = textItems.join(' ') + lastWord;\n    targetTextNode.parentElement.replaceChild(new Text(result), targetTextNode);\n\n    // When this condition is true, the target text node had no whitespace\n    // character contained within it (we added it above). So, we'll need to make\n    // sure we trim a whitespace character from the end of the preceding text node.\n    if (lastWord?.length === targetTextNode.nodeValue!.length + 1) {\n      // Capture the text node before the target text node. (we add 1 to the index to account for the reversed array).\n      // We'll need to trim a trailing space from this node if one exists.\n      const precedingTextNode = flattenedTextNodes[flattenedTextNodes.findIndex((node) => node === targetTextNode) + 1];\n\n      if (precedingTextNode?.parentElement) {\n        // const textItems = getTextItems(precedingTextNode.nodeValue!);\n        if ([...precedingTextNode.nodeValue!].pop()?.match(/\\s/)) {\n          // eslint-disable-next-line no-shadow\n          const result = precedingTextNode.nodeValue!.slice(0, -1);\n          precedingTextNode.parentElement.replaceChild(new Text(result), precedingTextNode);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Returns `true` if the text block contains\n * at least `wordCountThreshold` words.\n */\nfunction shouldPreventOrphansCheck(elem: HTMLElement, wordCountThreshold: number, targets?: Node[]) {\n  const passesWordCountThreshold = getTextItems(elem.innerText).length >= wordCountThreshold;\n  const elemContainsSomeTargets = targets == null ? true : targets.some((node) => elem.contains(node));\n\n  return passesWordCountThreshold && elemContainsSomeTargets;\n}\n\nfunction getTextItems(text: string) {\n  return text.replace(/\\u00A0/g, ' ').split(/\\s/);\n}\n"],"names":["useRef","useForceUpdate","useIsomorphicLayoutEffect","useEffectAfterMount","React"],"mappings":"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"}