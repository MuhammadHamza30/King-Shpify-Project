'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.js');
var React = require('react');
var clsx = require('clsx');
var mergeProps = require('../../../libs/merge-props.js');
var skeleton = require('./skeleton.less.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

/**
 * Renders an animated loading skeleton that automatically adapts to the current
 * font-size and line-height.
 *
 * Based on `react-loading-skeleton`.
 *
 * @see the LICENSE file at the root of this source tree:
 *   https://github.com/dvtng/react-loading-skeleton
 *
 * Modifications from original source:
 *   - Removes usage of `emotion` for CSS.
 *   - Adds `shape` prop to control the general shape of the skeleton.
 *   - Adds default TypeScript support.
 */
const Skeleton = (props) => {
    const { count = 1, duration = 1200, shape, width, height } = props, otherProps = _tslib.__rest(props, ["count", "duration", "shape", "width", "height"]);
    const elements = [];
    for (let i = 0; i < count; i++) {
        elements.push(React__default["default"].createElement("span", Object.assign({ key: i }, mergeProps.mergeProps({
            className: clsx__default["default"](skeleton["default"].item, shape === 'circle' && skeleton["default"].circle, shape === 'pill' && skeleton["default"].pill),
            style: {
                width,
                height,
                animation: `${skeleton["default"].skeletonAnim} ${duration}ms ease-in-out infinite`,
            },
        }, otherProps)), "\u200C"));
    }
    return React__default["default"].createElement("span", { className: clsx__default["default"](skeleton["default"].Skeleton) }, elements);
};
Skeleton.displayName = 'Skeleton';

exports.Skeleton = Skeleton;
//# sourceMappingURL=skeleton.js.map
