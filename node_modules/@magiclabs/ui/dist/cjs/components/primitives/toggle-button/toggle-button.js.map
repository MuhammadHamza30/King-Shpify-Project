{"version":3,"file":"toggle-button.js","sources":["../../../../../src/components/primitives/toggle-button/toggle-button.tsx"],"sourcesContent":["import React from 'react';\nimport { PressEvent } from '@react-types/shared';\nimport { usePress, useFocusRing } from 'react-aria';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { clsx } from '../../../libs/clsx';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\nimport { transitions } from '../../../hooks/transitions';\nimport { IntrinsicElementProps } from '../../../types/utility';\n\nimport styles from './toggle-button.less';\n\ninterface ToggleButtonProps extends IntrinsicElementProps<'button'> {\n  checked?: boolean;\n  disabled?: boolean;\n  onPress?: (event: PressEvent) => void;\n  color?: 'primary' | 'success' | 'warning' | 'error';\n}\n\nexport const ToggleButton = /* @__PURE__ */ forwardRefWrapper<HTMLButtonElement, ToggleButtonProps>(\n  'ToggleButton',\n\n  { color: 'primary' },\n\n  (props, externalRef) => {\n    const { onPress, className, disabled, checked, color, ...otherProps } = props;\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const { pressProps, isPressed } = usePress({ onPress, isDisabled: disabled });\n    const getScaleProps = transitions.useScaleIn();\n\n    return (\n      <button\n        className={clsx([\n          className,\n          styles.ToggleButton,\n          styles[`color_${color}`],\n          disabled && styles.disabled,\n          checked && styles.checked,\n          isFocusVisible && styles.focusVisible,\n          isPressed && styles.active,\n        ])}\n        type=\"button\"\n        role=\"switch\"\n        disabled={disabled}\n        aria-disabled={disabled}\n        aria-checked={checked}\n        tabIndex={0}\n        {...mergeProps(pressProps, focusProps, otherProps)}\n        ref={externalRef}\n      >\n        <AnimatePresence>\n          {isFocusVisible && <motion.span aria-hidden=\"true\" className={styles.focusRing} {...getScaleProps(1.2)} />}\n        </AnimatePresence>\n      </button>\n    );\n  },\n);\n"],"names":["forwardRefWrapper","__rest","useFocusRing","usePress","transitions","React","clsx","styles","mergeProps","AnimatePresence","motion"],"mappings":";;;;;;;;;;;;;;;;;;;MAmBa,YAAY,mBAAmBA,mCAAiB,CAC3D,cAAc,EAEd,EAAE,KAAK,EAAE,SAAS,EAAE,EAEpB,CAAC,KAAK,EAAE,WAAW,KAAI;AACrB,IAAA,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAoB,GAAA,KAAK,EAApB,UAAU,GAAAC,aAAA,CAAK,KAAK,EAAvE,CAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,CAA+D,CAAQ,CAAC;IAE9E,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAGC,sBAAY,EAAE,CAAC;AACtD,IAAA,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAGC,kBAAQ,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC9E,IAAA,MAAM,aAAa,GAAGC,uBAAW,CAAC,UAAU,EAAE,CAAC;AAE/C,IAAA,QACEC,yBAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EACE,SAAS,EAAEC,wBAAI,CAAC;YACd,SAAS;AACT,YAAAC,uBAAM,CAAC,YAAY;AACnB,YAAAA,uBAAM,CAAC,CAAA,MAAA,EAAS,KAAK,CAAA,CAAE,CAAC;YACxB,QAAQ,IAAIA,uBAAM,CAAC,QAAQ;YAC3B,OAAO,IAAIA,uBAAM,CAAC,OAAO;YACzB,cAAc,IAAIA,uBAAM,CAAC,YAAY;YACrC,SAAS,IAAIA,uBAAM,CAAC,MAAM;AAC3B,SAAA,CAAC,EACF,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,QAAQ,EAAA,eAAA,EACH,QAAQ,EACT,cAAA,EAAA,OAAO,EACrB,QAAQ,EAAE,CAAC,EACP,EAAAC,qBAAU,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,EAClD,EAAA,GAAG,EAAE,WAAW,EAAA,CAAA;QAEhBH,yBAAC,CAAA,aAAA,CAAAI,4BAAe,EACb,IAAA,EAAA,cAAc,IAAIJ,yBAAA,CAAA,aAAA,CAACK,mBAAM,CAAC,IAAI,EAAa,MAAA,CAAA,MAAA,CAAA,EAAA,aAAA,EAAA,MAAM,EAAC,SAAS,EAAEH,uBAAM,CAAC,SAAS,EAAA,EAAM,aAAa,CAAC,GAAG,CAAC,CAAI,CAAA,CAC1F,CACX,EACT;AACJ,CAAC;;;;"}