'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.js');
var React = require('react');
var reactAria = require('react-aria');
var framerMotion = require('framer-motion');
var mergeProps = require('../../../libs/merge-props.js');
var clsx = require('clsx');
var forwardRefWrapper = require('../../../libs/forward-ref-wrapper.js');
var transitions = require('../../../hooks/transitions.js');
var toggleButton = require('./toggle-button.less.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var clsx__default = /*#__PURE__*/_interopDefaultLegacy(clsx);

const ToggleButton = /* @__PURE__ */ forwardRefWrapper.forwardRefWrapper('ToggleButton', { color: 'primary' }, (props, externalRef) => {
    const { onPress, className, disabled, checked, color } = props, otherProps = _tslib.__rest(props, ["onPress", "className", "disabled", "checked", "color"]);
    const { isFocusVisible, focusProps } = reactAria.useFocusRing();
    const { pressProps, isPressed } = reactAria.usePress({ onPress, isDisabled: disabled });
    const getScaleProps = transitions.transitions.useScaleIn();
    return (React__default["default"].createElement("button", Object.assign({ className: clsx__default["default"]([
            className,
            toggleButton["default"].ToggleButton,
            toggleButton["default"][`color_${color}`],
            disabled && toggleButton["default"].disabled,
            checked && toggleButton["default"].checked,
            isFocusVisible && toggleButton["default"].focusVisible,
            isPressed && toggleButton["default"].active,
        ]), type: "button", role: "switch", disabled: disabled, "aria-disabled": disabled, "aria-checked": checked, tabIndex: 0 }, mergeProps.mergeProps(pressProps, focusProps, otherProps), { ref: externalRef }),
        React__default["default"].createElement(framerMotion.AnimatePresence, null, isFocusVisible && React__default["default"].createElement(framerMotion.motion.span, Object.assign({ "aria-hidden": "true", className: toggleButton["default"].focusRing }, getScaleProps(1.2))))));
});

exports.ToggleButton = ToggleButton;
//# sourceMappingURL=toggle-button.js.map
