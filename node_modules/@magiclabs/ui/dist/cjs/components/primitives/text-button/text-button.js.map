{"version":3,"file":"text-button.js","sources":["../../../../../src/components/primitives/text-button/text-button.tsx"],"sourcesContent":["import { PressEvent } from '@react-types/shared';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { RefAttributes } from 'react';\nimport { useFocusRing, useHover, usePress } from 'react-aria';\nimport { transitions } from '../../../hooks/transitions';\nimport { clsx } from '../../../libs/clsx';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { Icon, IconColorProvider, MonochromeIconDefinition } from '../../icons';\nimport { Spacer } from '../../layout';\nimport { InverseThemeSemantics, useTheme } from '../../theme-provider';\n\nimport { createGenericForwardRefsFactory } from '../../../libs/generic-forward-refs';\nimport { BaseColorName, ColorTone } from '../../../libs/theme';\n\nimport styles from './text-button.less';\n\ninterface TextButtonProps extends RefAttributes<HTMLAnchorElement | HTMLButtonElement> {\n  disabled?: boolean;\n  onPress?: (event: PressEvent) => void;\n  size?: 'sm' | 'md';\n  color?: 'primary' | 'secondary' | 'tertiary' | 'success' | 'warning' | 'error';\n  leadingIcon?: MonochromeIconDefinition;\n  trailingIcon?: MonochromeIconDefinition;\n  className?: string;\n}\n\n/**\n * Determines a _default_ color for icons nested in a `<TextButton>`.\n */\nfunction useIconColor(baseColor?: BaseColorName, inverseSemantics?: boolean, isHovered?: boolean, isPressed?: boolean) {\n  const theme = useTheme({ inverseSemantics });\n\n  let tone: ColorTone = 'base';\n\n  // \":hover\" state\n  if (isHovered) {\n    tone = theme.isLightTheme ? 'lighter' : 'darker';\n  }\n\n  // \":active\" state\n  if (isPressed) {\n    tone = theme.isLightTheme ? 'darkest' : 'lightest';\n  }\n\n  return baseColor ? theme.hex[baseColor][tone] : undefined;\n}\n\nconst createTextButtonComponents = /* @__PURE__ */ createGenericForwardRefsFactory(['button', 'a']);\nconst TextButtonComponents = /* @__PURE__ */ createTextButtonComponents<TextButtonProps>(\n  'TextButton',\n\n  { color: 'primary', size: 'md' },\n\n  (props, externalRef) => {\n    const { onPress, className, disabled, size, color, leadingIcon, trailingIcon, children, component, ...otherProps } =\n      props;\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const { isHovered, hoverProps } = useHover({ isDisabled: disabled });\n    const { isPressed, pressProps } = usePress({ onPress, isDisabled: disabled });\n    const getScaleProps = transitions.useScaleIn();\n\n    const inverseSemantics = color === 'secondary';\n    const iconColor = useIconColor(color, inverseSemantics, isHovered, isPressed);\n\n    const content = (\n      <>\n        <AnimatePresence>\n          {isFocusVisible && <motion.span aria-hidden=\"true\" className={styles.focusRing} {...getScaleProps(1.08)} />}\n        </AnimatePresence>\n\n        {leadingIcon && (\n          <>\n            <Icon size={size === 'sm' ? 20 : 24} type={leadingIcon} />\n            <Spacer size={8} />\n          </>\n        )}\n\n        <span className={styles.buttonLabel}>{children}</span>\n\n        {trailingIcon && (\n          <>\n            <Spacer size={8} />\n            <Icon size={size === 'sm' ? 20 : 24} type={trailingIcon} />\n          </>\n        )}\n      </>\n    );\n\n    return (\n      <IconColorProvider colorA={iconColor}>\n        <InverseThemeSemantics active={inverseSemantics}>\n          {React.createElement(\n            component,\n\n            {\n              className: clsx([\n                className,\n                styles.TextButton,\n                styles[size!],\n                styles[`size_${size}`],\n                styles[`color_${color}`],\n                disabled && styles.disabled,\n                isPressed && styles.active,\n              ]),\n              disabled,\n              'aria-disabled': disabled,\n              ...mergeProps(pressProps, focusProps, hoverProps, otherProps),\n              ref: externalRef,\n            },\n\n            content,\n          )}\n        </InverseThemeSemantics>\n      </IconColorProvider>\n    );\n  },\n);\n\nexport const TextButton = /* @__PURE__ */ Object.assign(TextButtonComponents.button, TextButtonComponents);\n"],"names":["useTheme","createGenericForwardRefsFactory","__rest","useFocusRing","useHover","usePress","transitions","React","AnimatePresence","motion","styles","Icon","Spacer","IconColorProvider","InverseThemeSemantics","clsx","mergeProps"],"mappings":"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"}