{"version":3,"file":"combo-box.js","sources":["../../../../../src/components/primitives/combo-box/combo-box.tsx"],"sourcesContent":["import { ComboBoxProps as BaseComboBoxProps } from '@react-types/combobox';\nimport { AnimatePresence } from 'framer-motion';\nimport React, { MutableRefObject, useEffect, useMemo, useRef, useState } from 'react';\nimport { DismissButton, FocusScope, useButton, useComboBox, useFilter, useOverlay, useSearchField } from 'react-aria';\nimport { ComboBoxState, useComboBoxState, useSearchFieldState } from 'react-stately';\nimport { clsx } from '../../../libs/clsx';\nimport { validateCollection } from '../../../libs/collections';\nimport { createGenericComponent } from '../../../libs/generic-component';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { Icon, MonochromeIcons } from '../../icons';\nimport { Flex, Outset } from '../../layout';\nimport { useTheme } from '../../theme-provider/use-theme';\nimport { ListBox, ListBoxContext, useOption } from '../list-box/list-box';\nimport { TextField } from '../text-field/text-field';\n\nimport styles from './combo-box.less';\n\ninterface ComboBoxProps<T extends object> extends BaseComboBoxProps<T> {\n  label?: string;\n  filter?: (item: T, filter: string) => boolean;\n  size?: 'sm' | 'md' | 'lg';\n  showMenuButton?: boolean;\n  showSearchIcon?: boolean;\n  menuMinHeight?: React.CSSProperties['minHeight'];\n  menuMaxHeight?: React.CSSProperties['maxHeight'];\n  autoSelect?: boolean;\n}\n\nfunction ComboBoxRender<T extends object>(props: ComboBoxProps<T>) {\n  const {\n    filter: customFilter,\n    size = 'md',\n    showMenuButton,\n    showSearchIcon,\n    menuMinHeight,\n    menuMaxHeight,\n    inputValue,\n    defaultInputValue,\n\n    /**\n     * If true, the input contents will be selected on focus.\n     */\n    autoSelect,\n    ...propsWithoutCustom\n  } = props;\n\n  const { items, label, isRequired } = props;\n\n  const validCollectionChildren = validateCollection(propsWithoutCustom, GenericComboBox);\n\n  // --- Advanced use-case: custom `items` filtering\n\n  const [filterValue, setFilterValue] = useState<string | undefined>(defaultInputValue);\n  const filteredItems = useMemo(() => {\n    if (items && customFilter) {\n      return Array.from(items)\n        .filter(Boolean)\n        .filter((item) => {\n          return customFilter(item, filterValue ?? '');\n        });\n    }\n\n    return undefined;\n  }, [items, customFilter, filterValue]);\n\n  // --- State, props, and refs containing accessibility metadata for use with the combo-box\n\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const listBoxRef = useRef<HTMLUListElement | null>(null);\n  const popoverRef = useRef<HTMLDivElement | null>(document.createElement('div'));\n  const buttonRef = useRef<HTMLButtonElement | null>(null);\n\n  const state = useComboBoxState({\n    ...mergeProps(propsWithoutCustom, {\n      inputValue: inputValue ?? filterValue,\n      onInputChange: setFilterValue,\n    }),\n    items: filteredItems || items,\n    children: validCollectionChildren,\n    defaultFilter: useFilter({ sensitivity: 'base' }).contains,\n  });\n\n  const {\n    buttonProps: triggerProps,\n    inputProps,\n    listBoxProps,\n    labelProps,\n  } = useComboBox(\n    {\n      ...propsWithoutCustom,\n      inputRef,\n      listBoxRef,\n      popoverRef,\n      buttonRef: showMenuButton ? buttonRef : undefined,\n    },\n    state,\n  );\n\n  // If the `autoSelect` prop is set, we'll select the input contents whenever\n  // the combobox gets focus.\n  useEffect(() => {\n    if (state.isFocused && autoSelect) {\n      inputRef.current?.select();\n    }\n  }, [state.isFocused, autoSelect]);\n\n  // Props for an menu trigger button; currently unused...\n  const { buttonProps } = useButton(triggerProps, buttonRef);\n\n  // --- Manage listbox overlay state\n\n  const { overlayProps } = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: false,\n    },\n\n    popoverRef,\n  );\n\n  // --- Pass the combo-box state and ref to the `ListBox` via React context\n\n  const listBoxCtx = useMemo(\n    () => ({\n      state,\n      ref: listBoxRef,\n    }),\n    [state, listBoxRef],\n  );\n\n  const theme = useTheme();\n\n  return (\n    <div className={styles.ComboBox}>\n      {label && (\n        <>\n          <label className={clsx([styles.ComboBoxLabel, styles[`size_${size}`]])} {...labelProps}>\n            <Flex.Row alignItems=\"center\">\n              <Outset right={3} trim=\"horizontal\">\n                <span>{label}</span>\n                {isRequired && <Icon size={10} color={theme.hex.primary.base} type={MonochromeIcons.AsteriskBold} />}\n              </Outset>\n            </Flex.Row>\n          </label>\n        </>\n      )}\n\n      <TextField\n        {...mergeProps(inputProps)}\n        size={size}\n        prefix={!!showSearchIcon && <Icon style={{ opacity: 0.5 }} size={14} type={MonochromeIcons.Search} />}\n        suffix={!!state.inputValue.length && <ClearInputButton state={state} inputRef={inputRef} />}\n        addonAfter={\n          showMenuButton && (\n            <TextField.AddonButton {...buttonProps} ref={buttonRef}>\n              <Icon size={14} type={state.isOpen ? MonochromeIcons.CaretUp : MonochromeIcons.CaretDown} />\n            </TextField.AddonButton>\n          )\n        }\n        ref={inputRef}\n      />\n\n      <AnimatePresence>\n        {state.isOpen && (\n          <FocusScope restoreFocus>\n            <div className={styles.listboxContainer} {...overlayProps} ref={popoverRef}>\n              <ListBoxContext.Provider value={listBoxCtx}>\n                <ListBox {...listBoxProps} minHeight={menuMinHeight} maxHeight={menuMaxHeight}>\n                  {}\n                </ListBox>\n              </ListBoxContext.Provider>\n              <DismissButton onDismiss={state.close} />\n            </div>\n          </FocusScope>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface ClearInputButtonProps {\n  state: ComboBoxState<any>;\n  inputRef: MutableRefObject<HTMLInputElement | null>;\n}\n\nconst ClearInputButton: React.FC<ClearInputButtonProps> = (props) => {\n  const { state, inputRef } = props;\n\n  const searchProps = {\n    // label doesn't matter because we use `aria-hidden=true`;\n    // just need this to silence the warning from `react-aria`\n    'aria-label': 'n/a',\n    value: state.inputValue,\n    onChange: (v: string) => state.setInputValue(v),\n  };\n\n  const searchState = useSearchFieldState(searchProps);\n  const { clearButtonProps } = useSearchField(searchProps, searchState, inputRef);\n  const clearButtonRef = React.useRef(null);\n  const { buttonProps } = useButton(clearButtonProps, clearButtonRef);\n\n  return (\n    <button {...mergeProps({ className: styles.ClearInputButton }, buttonProps)} tabIndex={-1} aria-hidden=\"true\">\n      <Icon size={14} type={MonochromeIcons.Remove} />\n    </button>\n  );\n};\n\nconst GenericComboBox = /* @__PURE__ */ createGenericComponent('ComboBox', ComboBoxRender);\n\nexport const ComboBox = /* @__PURE__ */ Object.assign(GenericComboBox, {\n  useOption,\n});\n"],"names":["validateCollection","useState","useMemo","useRef","useComboBoxState","mergeProps","useFilter","useComboBox","useEffect","useButton","useOverlay","useTheme","React","styles","clsx","Flex","Outset","Icon","MonochromeIcons.AsteriskBold","TextField","MonochromeIcons.Search","MonochromeIcons.CaretUp","MonochromeIcons.CaretDown","AnimatePresence","FocusScope","ListBoxContext","ListBox","DismissButton","useSearchFieldState","useSearchField","MonochromeIcons.Remove","createGenericComponent","useOption"],"mappings":"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"}