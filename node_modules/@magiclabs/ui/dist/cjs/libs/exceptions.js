'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function createErrorWithCode(code, source, message) {
    return new UIError(code, source, message);
}
/**
 * The base error type which all `@magiclabs/ui` exceptions derive from.
 */
class UIError extends Error {
    constructor(code, source, message) {
        super();
        this.__proto__ = Error;
        // eslint-disable-next-line no-nested-ternary
        const label = typeof source === 'string' ? source : source.displayName ? `<${source.displayName}>` : undefined;
        this.code = `@magiclabs/ui.${code.toUpperCase()}`;
        this.message = label ? `[@magiclabs/ui ❯ ${label}] ${message}` : `[@magiclabs/ui] ${message}`;
        Object.setPrototypeOf(this, UIError.prototype);
    }
}
function logWarning(source, message) {
    // eslint-disable-next-line no-nested-ternary
    const label = typeof source === 'string' ? source : source.displayName ? `<${source.displayName}>` : undefined;
    console.warn(label ? `[@magiclabs/ui ❯ ${label}] ${message}` : `[@magiclabs/ui] ${message}`);
}

exports.UIError = UIError;
exports.createErrorWithCode = createErrorWithCode;
exports.logWarning = logWarning;
//# sourceMappingURL=exceptions.js.map
