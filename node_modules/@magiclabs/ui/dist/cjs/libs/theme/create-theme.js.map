{"version":3,"file":"create-theme.js","sources":["../../../../src/libs/theme/create-theme.ts"],"sourcesContent":["import md5 from 'blueimp-md5';\nimport Color from 'color';\nimport { ThemeType } from './theme-types';\n\ntype ColorParam = Color | string | ArrayLike<number> | number | { [key: string]: any };\n\ninterface RgbaResolver {\n  string(alpha?: string | number): string;\n  array(alpha?: string | number): [string, string, string, string]; // [R, G, B, A]\n}\n\n// @see https://github.com/Qix-/color/issues/53\nfunction lightenBy(color: Color, ratio: number) {\n  const lightness = color.lightness();\n  /* eslint-disable-next-line @typescript-eslint/restrict-plus-operands */\n  return color.lightness(lightness + (100 - lightness) * ratio);\n}\n\n// @see https://github.com/Qix-/color/issues/53\nfunction darkenBy(color: Color, ratio: number) {\n  const lightness = color.lightness();\n  return color.lightness(lightness - lightness * ratio);\n}\n\n/**\n * Creates an object of resolver functions for the given RGBA color name and\n * color representation.\n */\nfunction createRgbaColorResolvers(colorRepresentation: ColorParam): RgbaResolver {\n  const color = Color(colorRepresentation);\n\n  return {\n    string: (alpha = 1) => {\n      const rgbString = color.rgb().array().join(', ');\n      return `rgba(${rgbString}, ${alpha})`;\n    },\n\n    array: (alpha = 1) =>\n      [\n        ...color\n          .rgb()\n          .array()\n          .map((val) => String(val)),\n        String(alpha),\n      ] as [string, string, string, string],\n  };\n}\n\ntype ColorDefinition =\n  | string\n  | {\n      base: string;\n      lighter: string;\n      lightest: string;\n      darker: string;\n      darkest: string;\n    };\n\nexport type FontWeight = '800' | '700' | '600' | '500' | '400';\n\nexport type TypographyDefinition = {\n  fontSize: string;\n  lineHeight: string;\n  defaultFontWeight?: FontWeight;\n  textTransform?: 'capitalize' | 'full-size-kana' | 'full-width' | 'lowercase' | 'none' | 'uppercase';\n  letterSpacing?: string;\n  fontFamily?: string;\n};\n\nexport interface ThemeConfig {\n  // Colors\n  primaryColor: ColorDefinition;\n  v2secondaryColor: ColorDefinition;\n  v2tertiaryColor: ColorDefinition;\n  neutralColor: ColorDefinition;\n  negativeColor: ColorDefinition;\n  lightColor: ColorDefinition;\n  darkColor: ColorDefinition;\n  midColor: ColorDefinition;\n  successColor: ColorDefinition;\n  warningColor: ColorDefinition;\n  errorColor: ColorDefinition;\n\n  // Typography\n  typography: {\n    h1: TypographyDefinition;\n    h2: TypographyDefinition;\n    h3: TypographyDefinition;\n    h4: TypographyDefinition;\n    h5: TypographyDefinition;\n    h6: TypographyDefinition;\n    p: {\n      large: TypographyDefinition;\n      medium: TypographyDefinition;\n      small: TypographyDefinition;\n    };\n    mono: {\n      large: TypographyDefinition;\n      medium: TypographyDefinition;\n      small: TypographyDefinition;\n    };\n  };\n\n  // Misc.\n  shift?: [number, number];\n  type?: ThemeType;\n  font?: { sans?: string; monospace?: string };\n\n  /**\n   * There are some design cases where `{color}_lighter` / `{color}_darker`\n   * semantics should be reversed. When this option is true, `{color}_lighter`\n   * becomes `{color}_darker` and vice versa.\n   *\n   * Use with care.\n   */\n  inverseSemantics?: boolean;\n}\n\nexport type ThemeTypographyKeys = keyof ThemeConfig['typography'];\n\n/**\n * Return a partial `ThemeContext` object with `secondaryColor` and `tertiary`\n * set for greatest contrast.\n */\nexport function createTheme<T extends ThemeConfig>(config: T) {\n  // Theme type (\"dark\", \"light\", or \"auto\").\n  const themeType = config.type ?? 'auto';\n\n  // Color values\n  const primaryColor = Color(typeof config.primaryColor === 'string' ? config.primaryColor : config.primaryColor.base);\n  const v2secondaryColor = Color(typeof config.v2secondaryColor === 'string' ? config.v2secondaryColor : config.v2secondaryColor.base);\n  const v2tertiaryColor = Color(typeof config.v2tertiaryColor === 'string' ? config.v2tertiaryColor : config.v2tertiaryColor.base);\n  const neutralColor = Color(typeof config.neutralColor === 'string' ? config.neutralColor : config.neutralColor.base);\n  const negativeColor = Color(typeof config.negativeColor === 'string' ? config.negativeColor : config.negativeColor.base);\n  const lightColor = Color(typeof config.lightColor === 'string' ? config.lightColor : config.lightColor.base);\n  const darkColor = Color(typeof config.darkColor === 'string' ? config.darkColor : config.darkColor.base);\n  const midColor = Color(typeof config.midColor === 'string' ? config.midColor : config.midColor.base);\n  const successColor = Color(typeof config.successColor === 'string' ? config.successColor : config.successColor.base);\n  const warningColor = Color(typeof config.warningColor === 'string' ? config.warningColor : config.warningColor.base);\n  const errorColor = Color(typeof config.errorColor === 'string' ? config.errorColor : config.errorColor.base);\n\n  // Font values\n  const sans =\n    config.font?.sans ??\n    '\"Inter\", \"ProximaNova\", -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif';\n  const monospace = config.font?.monospace ?? 'monospace';\n\n  // Determine secondary/tertiary colors with best contrast\n  const isDarkTheme =\n    /* eslint-disable-next-line no-nested-ternary */\n    themeType === 'dark' ? true : themeType === 'light' ? false : !primaryColor.isDark();\n  const isLowContrast = isDarkTheme !== !primaryColor.isDark();\n  const secondaryColor = isDarkTheme ? darkColor : lightColor;\n  const tertiaryColor = isDarkTheme ? lightColor : darkColor;\n\n  // Determine how far to shift the color value for 'Darker/Lighter' variants.\n  // Stronger contrast === larger shift\n  const [colorValueShift, colorValueShiftFurther] = config.shift ?? [0.5, 0.75];\n\n  // --- Hex values\n\n  const createHexGroup = (base: Color, def: ColorDefinition) => {\n    const withDefaultSemantics = {\n      base: base.hex(),\n      lighter: typeof def === 'string' ? lightenBy(base, colorValueShift).hex() : Color(def.lighter).hex(),\n      lightest: typeof def === 'string' ? lightenBy(base, colorValueShiftFurther).hex() : Color(def.lightest).hex(),\n      darker: typeof def === 'string' ? darkenBy(base, colorValueShift).hex() : Color(def.darker).hex(),\n      darkest: typeof def === 'string' ? darkenBy(base, colorValueShiftFurther).hex() : Color(def.darkest).hex(),\n    };\n\n    //   `darker` -> `lighter`\n    // `lightest` -> `darkest`\n    // ...and so forth\n    const withInverseSemantics = {\n      base: withDefaultSemantics.base,\n      lighter: withDefaultSemantics.darker,\n      lightest: withDefaultSemantics.darkest,\n      darker: withDefaultSemantics.lighter,\n      darkest: withDefaultSemantics.lightest,\n    };\n\n    return config.inverseSemantics ? withInverseSemantics : withDefaultSemantics;\n  };\n\n  const hexResult = {\n    primary: createHexGroup(primaryColor, config.primaryColor),\n    v2secondary: createHexGroup(v2secondaryColor, config.v2secondaryColor),\n    v2tertiary: createHexGroup(v2tertiaryColor, config.v2tertiaryColor),\n    neutral: createHexGroup(neutralColor, config.neutralColor),\n    negative: createHexGroup(negativeColor, config.negativeColor),\n    secondary: createHexGroup(secondaryColor, isDarkTheme ? config.darkColor : config.lightColor),\n    tertiary: createHexGroup(tertiaryColor, isDarkTheme ? config.lightColor : config.darkColor),\n    success: createHexGroup(successColor, config.successColor),\n    warning: createHexGroup(warningColor, config.warningColor),\n    error: createHexGroup(errorColor, config.errorColor),\n    light: createHexGroup(lightColor, config.lightColor),\n    dark: createHexGroup(darkColor, config.darkColor),\n    mid: createHexGroup(midColor, config.midColor),\n  };\n\n  // --- RGBA values\n\n  const createRgbaGroup = <T extends keyof typeof hexResult>(hex: (typeof hexResult)[T]) => ({\n    base: createRgbaColorResolvers(hex.base),\n    lighter: createRgbaColorResolvers(hex.lighter),\n    lightest: createRgbaColorResolvers(hex.lightest),\n    darker: createRgbaColorResolvers(hex.darker),\n    darkest: createRgbaColorResolvers(hex.darkest),\n  });\n\n  const rgbaResult = {\n    primary: createRgbaGroup(hexResult.primary),\n    v2secondary: createRgbaGroup(hexResult.v2secondary),\n    v2tertiary: createRgbaGroup(hexResult.v2tertiary),\n    neutral: createRgbaGroup(hexResult.neutral),\n    negative: createRgbaGroup(hexResult.negative),\n    secondary: createRgbaGroup(hexResult.secondary),\n    tertiary: createRgbaGroup(hexResult.tertiary),\n    success: createRgbaGroup(hexResult.success),\n    warning: createRgbaGroup(hexResult.warning),\n    error: createRgbaGroup(hexResult.error),\n    light: createRgbaGroup(hexResult.light),\n    dark: createRgbaGroup(hexResult.dark),\n    mid: createRgbaGroup(hexResult.mid),\n  };\n\n  // --- Color instance values\n\n  const createColorGroup = <T extends keyof typeof hexResult>(hex: (typeof hexResult)[T]) => ({\n    base: Color(hex.base),\n    lighter: Color(hex.lighter),\n    lightest: Color(hex.lightest),\n    darker: Color(hex.darker),\n    darkest: Color(hex.darkest),\n  });\n\n  const colorResult = {\n    primary: createColorGroup(hexResult.primary),\n    v2secondary: createColorGroup(hexResult.v2secondary),\n    v2tertiary: createColorGroup(hexResult.v2tertiary),\n    neutral: createColorGroup(hexResult.neutral),\n    negative: createColorGroup(hexResult.negative),\n    secondary: createColorGroup(hexResult.secondary),\n    tertiary: createColorGroup(hexResult.tertiary),\n    success: createColorGroup(hexResult.success),\n    warning: createColorGroup(hexResult.warning),\n    error: createColorGroup(hexResult.error),\n    light: createColorGroup(hexResult.light),\n    dark: createColorGroup(hexResult.dark),\n    mid: createColorGroup(hexResult.mid),\n  };\n\n  // --- Create a hash of the theme to track changes\n\n  let key = Object.keys(hexResult).reduce((p1, c1) => {\n    // @ts-ignore\n    return `${p1}:${Object.keys(hexResult[c1]).reduce((p2, c2) => {\n      // @ts-ignore\n      return `${p2}:${hexResult[c1][c2]}`;\n    }, c1)}`;\n  }, 'theme');\n\n  key += isDarkTheme ? ':dark' : ':light';\n  key += isLowContrast ? ':lowcontrast' : '';\n  key += `:${sans}:${monospace}`;\n  key += `:${config.inverseSemantics ? 'inverse_semantics' : 'default_semantics'}`;\n\n  key = md5(key);\n\n  // ---\n\n  return {\n    isDarkTheme,\n    isLightTheme: !isDarkTheme,\n    isLowContrast,\n    hex: hexResult,\n    rgba: rgbaResult,\n    color: colorResult,\n    font: { sans, monospace },\n    typography: config.typography,\n    key,\n    config,\n  };\n}\n"],"names":["Color","md5"],"mappings":"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"}