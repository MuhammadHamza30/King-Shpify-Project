/// <reference types="react" />
/**
 * Creates an `Error` with a consistent message format.
 */
export declare function createError(label: string, message: string): UIError<'ERROR'>;
export declare function createError(component: React.FC<any>, message: string): UIError<'ERROR'>;
export declare function createError(source: string | React.FC<any>, message: string): UIError<'ERROR'>;
/**
 * Creates an `Error` with a consistent message format and
 * attaches an error code to the resulting `Error` object.
 */
export declare function createErrorWithCode<Code extends string>(code: Code, label: string, message: string): UIError<Code>;
export declare function createErrorWithCode<Code extends string>(code: Code, component: React.FC<any>, message: string): UIError<Code>;
export declare function createErrorWithCode<Code extends string>(code: Code, source: string | React.FC<any>, message: string): UIError<Code>;
/**
 * The base error type which all `@magiclabs/ui` exceptions derive from.
 */
export declare abstract class UIError<Code extends string = string> extends Error {
    __proto__: ErrorConstructor;
    code: `@magiclabs/ui.${Uppercase<Code>}`;
    constructor(code: Code, source: string | React.FC<any>, message: string);
}
/**
 * Logs a warning message to the console using a consistent message format.
 */
export declare function logWarning(label: string, message: string): void;
export declare function logWarning(component: React.FC<any>, message: string): void;
export declare function logWarning(source: string | React.FC<any>, message: string): void;
