import { ComboBoxProps as BaseComboBoxProps } from '@react-types/combobox';
import React from 'react';
import { useOption } from '../list-box/list-box';
interface ComboBoxProps<T extends object> extends BaseComboBoxProps<T> {
    label?: string;
    filter?: (item: T, filter: string) => boolean;
    size?: 'sm' | 'md' | 'lg';
    showMenuButton?: boolean;
    showSearchIcon?: boolean;
    menuMinHeight?: React.CSSProperties['minHeight'];
    menuMaxHeight?: React.CSSProperties['maxHeight'];
    autoSelect?: boolean;
}
declare function ComboBoxRender<T extends object>(props: ComboBoxProps<T>): React.JSX.Element;
export declare const ComboBox: typeof ComboBoxRender & {
    propTypes?: React.WeakValidationMap<ComboBoxProps<object>> | undefined;
    contextTypes?: import("prop-types").ValidationMap<any> | undefined;
    defaultProps?: Partial<ComboBoxProps<object>> | undefined;
    displayName?: string | undefined;
} & {
    useOption: typeof useOption;
};
export {};
