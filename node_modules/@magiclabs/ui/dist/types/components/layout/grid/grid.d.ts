import React from 'react';
import { IntrinsicElementProps } from '../../../types/utility';
interface GridContainerContext {
    gutter?: number;
}
declare const GridContainerContext: React.Context<GridContainerContext>;
interface GridContainerProps extends GridContainerContext, IntrinsicElementProps<'div'> {
}
type GridColumnSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 'content' | 'auto';
type GridColumnOffset = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;
type GridColumnOrder = 'first' | 'last';
type GridColumnConfiguration = GridColumnSize | {
    size?: GridColumnSize;
    offset?: GridColumnOffset;
    order?: GridColumnOrder;
};
interface GridColumnProps extends IntrinsicElementProps<'div'> {
    xs?: GridColumnConfiguration;
    sm?: GridColumnConfiguration;
    md?: GridColumnConfiguration;
    lg?: GridColumnConfiguration;
    xl?: GridColumnConfiguration;
    xxl?: GridColumnConfiguration;
}
type GridRowAlignment = 'top' | 'middle' | 'bottom';
type GridRowDistribution = 'space-around' | 'space-between';
type GridRowConfiguration = {
    alignment?: GridRowAlignment;
    distribution?: GridRowDistribution;
};
interface GridRowProps extends IntrinsicElementProps<'div'> {
    xs?: GridRowConfiguration;
    sm?: GridRowConfiguration;
    md?: GridRowConfiguration;
    lg?: GridRowConfiguration;
    xl?: GridRowConfiguration;
    xxl?: GridRowConfiguration;
    reverse?: boolean;
}
export declare const Grid: React.ForwardRefExoticComponent<GridContainerProps & React.RefAttributes<HTMLDivElement>> & {
    Row: React.ForwardRefExoticComponent<GridRowProps & React.RefAttributes<HTMLDivElement>>;
    Column: React.ForwardRefExoticComponent<GridColumnProps & React.RefAttributes<HTMLDivElement>>;
};
export {};
