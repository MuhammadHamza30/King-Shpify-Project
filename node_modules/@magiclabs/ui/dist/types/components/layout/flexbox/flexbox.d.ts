import React from 'react';
import { IntrinsicElementProps } from '../../../types/utility';
type MainAxisAlignment = 'normal' | 'flex-start' | 'flex-end' | 'center' | 'left' | 'right' | 'baseline' | 'first baseline' | 'last baseline' | 'space-between' | 'space-around' | 'space-evenly' | 'stretch' | 'safe' | 'unsafe';
type CrossAxisAlignment = 'normal' | 'flex-start' | 'flex-end' | 'self-start' | 'self-end' | 'center' | 'baseline' | 'first baseline' | 'last baseline' | 'stretch' | 'safe' | 'unsafe';
type FlexDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse';
type FlexWrap = boolean | 'reverse';
export interface FlexProps extends IntrinsicElementProps<'div'> {
    inline?: boolean;
    justifyContent?: MainAxisAlignment;
    alignItems?: CrossAxisAlignment;
    alignSelf?: CrossAxisAlignment | 'auto';
    alignContent?: CrossAxisAlignment;
    flex?: string;
    direction?: FlexDirection;
    wrap?: FlexWrap;
    grow?: number;
    shrink?: number;
    basis?: string;
}
interface FlexItemProps extends Pick<FlexProps, 'grow' | 'shrink' | 'basis' | 'alignSelf' | 'inline'>, IntrinsicElementProps<'div'> {
}
interface FlexRowProps extends FlexProps {
    direction?: never;
    reverse?: boolean;
    horizontal?: MainAxisAlignment;
    vertical?: CrossAxisAlignment;
}
interface FlexColumnProps extends FlexProps {
    direction?: never;
    reverse?: boolean;
    horizontal?: CrossAxisAlignment;
    vertical?: MainAxisAlignment;
}
export declare const Flex: React.ForwardRefExoticComponent<FlexProps & React.RefAttributes<HTMLDivElement>> & {
    Item: React.ForwardRefExoticComponent<FlexItemProps & React.RefAttributes<HTMLDivElement>>;
    Row: React.ForwardRefExoticComponent<FlexRowProps & React.RefAttributes<HTMLDivElement>>;
    Column: React.ForwardRefExoticComponent<FlexColumnProps & React.RefAttributes<HTMLDivElement>>;
};
export {};
