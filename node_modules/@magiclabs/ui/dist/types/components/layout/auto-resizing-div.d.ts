import React from 'react';
import { ResizePayload } from 'watch-resize';
import { IntrinsicElementProps } from '../../types/utility';
interface TransitionStyles {
    transition: string;
    height: string;
    width: string;
    willChange: string;
}
interface TransitionConfig {
    duration?: string;
    timingFunction?: string;
    delay?: string;
}
interface AutoResizingDivProps extends Omit<IntrinsicElementProps<'div'>, 'onResize'> {
    initialDelay?: number;
    transition?: boolean | TransitionConfig;
    applyCSSVariables?: {
        element?: HTMLElement;
        transitionVar?: string;
        heightVar?: string;
        widthVar?: string;
    };
    onResize?: (payload: Omit<ResizePayload<HTMLElement>, 'destroy'> & {
        transitionStyles: TransitionStyles;
    }) => void;
    onAnimationFrame?: FrameRequestCallback;
    observerOnly?: boolean;
    autoWidth?: boolean;
    autoHeight?: boolean;
}
/**
 * This component is a container which automatically updates its `height` and
 * `width` styles property based on the total size of its child nodes. This
 * enables dynamic transitional height behavior.
 */
export declare const AutoResizingDiv: React.ForwardRefExoticComponent<AutoResizingDivProps & React.RefAttributes<HTMLDivElement>>;
export {};
