import { AnimationProps, TargetAndTransition, MotionAdvancedProps } from 'framer-motion';
type FramerVariants<Custom = void, VariantKeys extends string = string> = {
    [P in VariantKeys]: TargetAndTransition | ((custom: Custom) => TargetAndTransition);
};
type OptionalFramerVariants<Custom = void, VariantKeys extends string = string> = {
    [P in VariantKeys]?: TargetAndTransition | ((custom: Custom) => TargetAndTransition);
};
/**
 * Creates a custom animation hook for `framer-motion`.
 */
export declare function createFramerTransition<TCustom = void>(): {
    withVariants: <VariantKeys extends string = string>(variants: FramerVariants<TCustom, VariantKeys>) => {
        withReducedMotion: (reducedMotionVariants: OptionalFramerVariants<TCustom, VariantKeys>) => {
            use: (targets: {
                initial?: VariantKeys | undefined;
                animate?: VariantKeys | undefined;
                exit?: VariantKeys | undefined;
            }) => (custom?: TCustom) => AnimationProps & MotionAdvancedProps;
        };
        use: (targets: {
            initial?: VariantKeys | undefined;
            animate?: VariantKeys | undefined;
            exit?: VariantKeys | undefined;
        }) => (custom?: TCustom) => AnimationProps & MotionAdvancedProps;
    };
};
declare function useFade(): (custom?: void | undefined) => AnimationProps & MotionAdvancedProps;
declare function useScale(): (custom?: number | undefined) => AnimationProps & MotionAdvancedProps;
declare function useScaleIn(): (custom?: number | undefined) => AnimationProps & MotionAdvancedProps;
declare function useScaleOut(): (custom?: number | undefined) => AnimationProps & MotionAdvancedProps;
declare function useSlide(): (custom?: {
    x?: number | undefined;
    y?: number | undefined;
    scale?: number | undefined;
} | undefined) => AnimationProps & MotionAdvancedProps;
export declare const transitions: {
    useFade: typeof useFade;
    useSlide: typeof useSlide;
    useScale: typeof useScale;
    useScaleIn: typeof useScaleIn;
    useScaleOut: typeof useScaleOut;
};
export {};
