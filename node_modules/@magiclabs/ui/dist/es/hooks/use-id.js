import { useRef, useState, useEffect } from 'react';
import { useSSRSafeId } from '@react-aria/ssr';
import { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect.js';

const map = new Map();
/**
 * If a default is not provided, generates an ID.
 *
 * Based on `useId` utility from `@react-aria/utils`
 *
 * @see the LICENSE file at the root of this source tree:
 *   https://github.com/adobe/react-spectrum/blob/main/packages/@react-aria/utils/src/useId.ts
 *
 * Modifications from original source:
 *   - Uses our internal `use-isomorphic-layout-effect` hook
 */
function useID(defaultID) {
    const isRendering = useRef(true);
    isRendering.current = true;
    const [value, setValue] = useState(defaultID);
    const nextId = useRef(null);
    // Don't memo this, we want it new each render so that the Effects always run
    const updateValue = (val) => {
        if (!isRendering.current) {
            setValue(val);
        }
        else {
            nextId.current = val;
        }
    };
    useIsomorphicLayoutEffect(() => {
        isRendering.current = false;
    }, [updateValue]);
    useEffect(() => {
        const newId = nextId.current;
        if (newId) {
            setValue(newId);
            nextId.current = null;
        }
    }, [setValue, updateValue]);
    const res = useSSRSafeId(value);
    map.set(res, updateValue);
    return res;
}
/**
 * Merges two ids.
 *
 * Based on `mergeIds` utility from `@react-aria/utils`
 *
 * @see the LICENSE file at the root of this source tree:
 *   https://github.com/adobe/react-spectrum/blob/main/packages/@react-aria/utils/src/useId.ts
 *
 * Modifications from original source: none
 */
function mergeIDs(a, b) {
    if (a === b) {
        return a;
    }
    const setA = map.get(a);
    if (setA) {
        setA(b);
        return b;
    }
    const setB = map.get(b);
    if (setB) {
        setB(a);
        return a;
    }
    return b;
}
/**
 * Used to generate an id, and after render, check if that id is rendered so we
 * know if we can use it in places such as labelledby.
 *
 * Based on `useSlotId` utility from `@react-aria/utils`
 *
 * @see the LICENSE file at the root of this source tree:
 *   https://github.com/adobe/react-spectrum/blob/main/packages/@react-aria/utils/src/useId.ts
 *
 * Modifications from original source:
 *   - Uses our internal `use-isomorphic-layout-effect` hook
 */
function useSlotID() {
    const [id, setId] = useState(useID());
    useIsomorphicLayoutEffect(() => {
        const setCurr = map.get(id);
        if (setCurr && !document.getElementById(id)) {
            setId(null);
        }
    }, [id]);
    return id;
}

export { mergeIDs, useID, useSlotID };
//# sourceMappingURL=use-id.js.map
