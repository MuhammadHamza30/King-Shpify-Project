import { __rest } from '../../../_virtual/_tslib.js';
import { useState } from 'react';
import { usePopper } from 'react-popper';

function usePopperWrapper(options) {
    const { modifiers = [], arrow, offset = [0, 10] } = options, otherOptions = __rest(options, ["modifiers", "arrow", "offset"]);
    const [anchorElement, setAnchorElement] = useState(null);
    const [popperElement, setPopperElement] = useState(null);
    const [arrowElement, setArrowElement] = useState(null);
    const { styles, attributes, update, forceUpdate, state } = usePopper(anchorElement, popperElement, Object.assign({ modifiers: [
            { name: 'offset', enabled: true, options: { offset } },
            arrow && { name: 'arrow', options: { element: arrowElement } },
            ...modifiers,
        ].filter(Boolean) }, otherOptions));
    const anchorProps = { ref: setAnchorElement };
    const contentProps = Object.assign({ ref: setPopperElement, style: styles.popper }, attributes.popper);
    const arrowProps = { ref: setArrowElement, style: styles.arrow };
    return { anchorProps, contentProps, arrowProps, update, forceUpdate, state };
}

export { usePopperWrapper };
//# sourceMappingURL=use-popper-wrapper.js.map
