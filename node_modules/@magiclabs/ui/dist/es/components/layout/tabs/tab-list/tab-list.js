import { AnimatePresence, motion } from 'framer-motion';
import React, { useState, Children } from 'react';
import { useFocusWithin, useFocusVisible } from 'react-aria';
import { transitions } from '../../../../hooks/transitions.js';
import { useStyles } from '../../../../hooks/use-styles.js';
import clsx from 'clsx';
import { Flex } from '../../flexbox/flexbox.js';
import modules_df404821 from './tab-list.less.js';

const TabList = (props) => {
    const { label, orientation, indicatorAttributes, useAnimation, children } = props;
    const [isFocused, setFocus] = useState(false);
    const { focusWithinProps } = useFocusWithin({ onFocusWithinChange: setFocus });
    const { isFocusVisible } = useFocusVisible();
    const getFadeProps = transitions.useFade();
    const getScaleProps = transitions.useScaleIn();
    const focusRingAnimationProps = orientation === 'vertical' ? getScaleProps(1.1) : getFadeProps();
    const horizontalTabStyle = useStyles({
        width: `calc(${100 / Children.count(children)}% - 3px)`,
        left: `${Math.max(indicatorAttributes.offsetLeft, 4)}px`,
    });
    const verticalTabStyle = useStyles({
        height: `${indicatorAttributes.height}px`,
        top: `${indicatorAttributes.offsetTop}px`,
    });
    const verticalFocusRingStyle = useStyles({
        height: `calc(${verticalTabStyle.height} + 4px)`,
        top: `calc(${verticalTabStyle.top} - 4px)`,
    });
    return (React.createElement(Flex, Object.assign({ inline: true, className: clsx([modules_df404821.TabList, modules_df404821[orientation]]), direction: orientation === 'vertical' ? 'column' : 'row', alignItems: orientation === 'vertical' ? undefined : 'center', justifyContent: orientation === 'vertical' ? 'center' : undefined, role: "tablist", "aria-label": label }, focusWithinProps),
        React.createElement(AnimatePresence, null, isFocused && isFocusVisible && (React.createElement(motion.span, Object.assign({ "aria-hidden": "true", className: modules_df404821.focusRing }, focusRingAnimationProps, { transition: { duration: 0.3 }, style: orientation === 'vertical' ? verticalFocusRingStyle : undefined })))),
        React.createElement("div", { "aria-hidden": "true", className: clsx([modules_df404821.selectedTabIndicator, useAnimation && modules_df404821.withAnimation]), style: orientation === 'vertical' ? verticalTabStyle : horizontalTabStyle }),
        children));
};

export { TabList };
//# sourceMappingURL=tab-list.js.map
