{"version":3,"file":"tooltip.js","sources":["../../../../../src/components/feedback/tooltip/tooltip.tsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Placement, PositioningStrategy } from '@popperjs/core';\nimport { forwardRefWrapper } from '../../../libs/forward-ref-wrapper';\nimport { IntrinsicElementProps } from '../../../types/utility';\nimport { mergeProps } from '../../../libs/merge-props';\nimport { createErrorWithCode } from '../../../libs/exceptions';\nimport { Popover } from '../../layout';\n\ninterface TooltipProps extends IntrinsicElementProps<'div'> {\n  delay?: number | { show: number; hide: number };\n  waitForPointerExit?: boolean;\n  in?: boolean;\n  arrow?: boolean;\n  offset?: [number, number];\n  placement?: Placement;\n  strategy?: PositioningStrategy;\n  portalize?: boolean;\n  appearance?: 'default' | 'none';\n  stretch?: boolean;\n}\n\nconst TooltipBase = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, TooltipProps>(\n  'Tooltip',\n\n  {\n    delay: 0,\n    arrow: true,\n    waitForPointerExit: true,\n  },\n\n  (props, externalRef) => {\n    const { children, in: inProp, delay, waitForPointerExit, ...otherProps } = props;\n\n    const [shouldShow, setShouldShow] = useState(inProp);\n    const [isMouseOverTooltip, setIsMouseOverTooltip] = useState(false);\n    const showDelay = typeof delay === 'number' ? delay : delay?.show || 0;\n    const hideDelay = typeof delay === 'number' ? delay : delay?.hide || 1000;\n\n    /**\n     * Keep showing the tooltip if mouse enters the content area, if there\n     * is a `hideDelay` value set, we also start the timeout. The timeout\n     * itself does not hide the tooltip, for that we wait until the mouse\n     * leaves the content area (see `handleTooltipContentMouseLeave` below).\n     */\n    const handleTooltipContentMouseEnter = useCallback(() => {\n      setShouldShow(true);\n      setIsMouseOverTooltip(true);\n    }, []);\n\n    /**\n     * Stops showing the tooltip when mouse leaves the content area, while\n     * respecting the current `hideDelay` prop value.\n     */\n    const handleTooltipContentMouseLeave = useCallback(() => {\n      setIsMouseOverTooltip(false);\n    }, []);\n\n    // Show/hide the tooltip while\n    // accounting for the configured delay.\n    useEffect(() => {\n      let showTimeout: number;\n      let hideTimeout: number;\n\n      if (inProp && !shouldShow) {\n        if (showDelay) showTimeout = window.setTimeout(() => setShouldShow(true), showDelay);\n        else setShouldShow(true);\n      } else if (!inProp && (!waitForPointerExit ? true : !isMouseOverTooltip) && shouldShow) {\n        if (hideDelay) hideTimeout = window.setTimeout(() => setShouldShow(false), hideDelay);\n        else setShouldShow(false);\n      }\n\n      return () => {\n        if (showTimeout) clearTimeout(showTimeout);\n        if (hideTimeout) clearTimeout(hideTimeout);\n      };\n    }, [inProp, shouldShow, isMouseOverTooltip, showDelay, hideDelay]);\n\n    const anchor = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child.type === TooltipAnchor) {\n        return child;\n      }\n\n      return null;\n    })?.filter(Boolean);\n\n    const content = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child.type === TooltipContent) {\n        return React.cloneElement(\n          child,\n          mergeProps(child.props, {\n            onMouseEnter: handleTooltipContentMouseEnter,\n            onMouseLeave: handleTooltipContentMouseLeave,\n          }),\n        );\n      }\n\n      return null;\n    })?.filter(Boolean);\n\n    // Validate that only one <Tooltip.Anchor> is received.\n    const numAnchors = React.Children.count(anchor);\n    if (numAnchors > 1) {\n      throw createErrorWithCode(\n        'TOOLTIP_ONLY_ONE_ANCHOR_ALLOWED',\n        TooltipBase,\n        `Only one <Tooltip.Anchor> element can be rendered in a <Tooltip> at a time. Received: ${numAnchors}`,\n      );\n    }\n\n    // Validate that only one <Tooltip.Content> is received.\n    const numContents = React.Children.count(content);\n    if (numContents > 1) {\n      throw createErrorWithCode(\n        'TOOLTIP_ONLY_ONE_CONTENT_ALLOWED',\n        TooltipBase,\n        `Only one <Tooltip.Content> element can be rendered in a <Tooltip> at a time. Received: ${numContents}`,\n      );\n    }\n\n    if (React.Children.count(children) > numAnchors + numContents) {\n      // Validate that only <Tooltip.Content> and <Tooltip.Anchor> components are received as children.\n      throw createErrorWithCode(\n        'TOOLTIP_INCOMPATIBLE_CHILDREN_DETECTED',\n        TooltipBase,\n        'Only children wrapped with <Tooltip.Anchor> or <Tooltip.Content> are allowed within a <Tooltip>.',\n      );\n    }\n\n    return (\n      <Popover in={shouldShow} {...otherProps} ref={externalRef}>\n        <Popover.Anchor>{anchor}</Popover.Anchor>\n        <Popover.Content>{content}</Popover.Content>\n      </Popover>\n    );\n  },\n);\n\nconst TooltipAnchor = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, IntrinsicElementProps<'div'>>(\n  'Tooltip.Anchor',\n  (props, externalRef) => <div {...props} ref={externalRef} />,\n);\n\nconst TooltipContent = /* @__PURE__ */ forwardRefWrapper<HTMLDivElement, IntrinsicElementProps<'div'>>(\n  'Tooltip.Content',\n  (props, externalRef) => <div {...props} ref={externalRef} />,\n);\n\nexport const Tooltip = /* @__PURE__ */ Object.assign(TooltipBase, { Anchor: TooltipAnchor, Content: TooltipContent });\n"],"names":[],"mappings":"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"}