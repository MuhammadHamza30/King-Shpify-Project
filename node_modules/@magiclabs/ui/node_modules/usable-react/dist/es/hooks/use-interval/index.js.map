{"version":3,"file":"index.js","sources":["../../../../src/hooks/use-interval/index.ts"],"sourcesContent":["import { DependencyList, EffectCallback, useCallback, useEffect, useRef } from 'react';\nimport { useEffectTrigger } from '../use-effect-trigger';\nimport { useInitialRender } from '../use-initial-render';\n\n/**\n * Executes the given effect on an interval.\n */\nexport function useInterval(effect: EffectCallback, deps: DependencyList, interval = 1000) {\n  const savedCallback = useRef(effect);\n  const isInitialRender = useInitialRender();\n  const isCleared = useRef(false);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = effect;\n  }, [effect]);\n\n  // Set up the interval.\n  const triggerInterval = useEffectTrigger(() => {\n    if (!isInitialRender && !isCleared.current) return savedCallback.current();\n    return undefined;\n  }, [...deps]);\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      triggerInterval();\n    }, interval);\n    return () => clearTimeout(id);\n  }, [triggerInterval, interval]);\n\n  const clear = useCallback(() => {\n    isCleared.current = true;\n  }, []);\n\n  return clear;\n}\n"],"names":[],"mappings":";;;;;AAIA;;;SAGgB,WAAW,CAAC,MAAsB,EAAE,IAAoB,EAAE,QAAe;IAAf,yBAAA,EAAA,eAAe;IACvF,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACrC,IAAM,eAAe,GAAG,gBAAgB,EAAE,CAAC;IAC3C,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;;IAGhC,SAAS,CAAC;QACR,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC;KAChC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;;IAGb,IAAM,eAAe,GAAG,gBAAgB,CAAC;QACvC,IAAI,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,OAAO;YAAE,OAAO,aAAa,CAAC,OAAO,EAAE,CAAC;QAC3E,OAAO,SAAS,CAAC;KAClB,WAAM,IAAI,EAAE,CAAC;IAEd,SAAS,CAAC;QACR,IAAM,EAAE,GAAG,UAAU,CAAC;YACpB,eAAe,EAAE,CAAC;SACnB,EAAE,QAAQ,CAAC,CAAC;QACb,OAAO,cAAM,OAAA,YAAY,CAAC,EAAE,CAAC,GAAA,CAAC;KAC/B,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEhC,IAAM,KAAK,GAAG,WAAW,CAAC;QACxB,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;KAC1B,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,KAAK,CAAC;AACf;;;;"}