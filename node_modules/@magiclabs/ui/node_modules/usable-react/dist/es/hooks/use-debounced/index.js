import { __read } from '../../_virtual/_tslib.js';
import { useState, useEffect } from 'react';

/**
 * Debounces the given value. If `delay` is zero, the value is updated
 * synchronously.
 */
function useDebounced(value, delay) {
    if (delay === void 0) { delay = 300; }
    var isSynchronous = delay === 0;
    var _a = __read(useState(undefined), 2), debouncedValue = _a[0], setDebouncedValue = _a[1];
    useEffect(function () {
        var id = setTimeout(function () {
            setDebouncedValue(value);
        }, delay);
        return function () { return clearTimeout(id); };
    }, [delay, isSynchronous, value]);
    return isSynchronous ? value : debouncedValue;
}

export { useDebounced };
//# sourceMappingURL=index.js.map
