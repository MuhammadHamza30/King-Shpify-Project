import { useRef, useEffect } from 'react';
import { useInitialRender } from '../use-initial-render/index.js';

/**
 * Exactly like `useEffect`, except that the effect only executes on subsequent
 * updates after a component mounts.
 */
function useEffectAfterMount(effect, deps) {
    var isInitialRender = useInitialRender();
    var savedCallback = useRef(effect);
    useEffect(function () {
        savedCallback.current = effect;
    }, [effect]);
    useEffect(function () {
        if (!isInitialRender) {
            return savedCallback.current();
        }
        return undefined;
    }, deps);
}

export { useEffectAfterMount };
//# sourceMappingURL=index.js.map
