{"version":3,"file":"index.js","sources":["../../../../src/hooks/use-debounced-effect/index.ts"],"sourcesContent":["import { DependencyList, EffectCallback, useEffect } from 'react';\nimport { useEffectTrigger } from '../use-effect-trigger';\nimport { useInitialRender } from '../use-initial-render';\n\n/**\n * Debounces an effect. If `delay` is zero,\n * the effect is executed synchronously.\n *\n * The effect executes synchronously on the first render.\n */\nexport function useDebouncedEffect(effect: EffectCallback, delay = 0, deps: DependencyList = []) {\n  const isInitialRender = useInitialRender();\n  const triggerEffect = useEffectTrigger(effect, deps);\n\n  useEffect(() => {\n    if (isInitialRender || !delay) {\n      return effect();\n    }\n\n    const timeout = setTimeout(() => {\n      triggerEffect();\n    }, delay);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [delay, ...deps]);\n}\n"],"names":["useInitialRender","useEffectTrigger","useEffect"],"mappings":";;;;;;;;;AAIA;;;;;;SAMgB,kBAAkB,CAAC,MAAsB,EAAE,KAAS,EAAE,IAAyB;IAApC,sBAAA,EAAA,SAAS;IAAE,qBAAA,EAAA,SAAyB;IAC7F,IAAM,eAAe,GAAGA,sBAAgB,EAAE,CAAC;IAC3C,IAAM,aAAa,GAAGC,wBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAErDC,eAAS,CAAC;QACR,IAAI,eAAe,IAAI,CAAC,KAAK,EAAE;YAC7B,OAAO,MAAM,EAAE,CAAC;SACjB;QAED,IAAM,OAAO,GAAG,UAAU,CAAC;YACzB,aAAa,EAAE,CAAC;SACjB,EAAE,KAAK,CAAC,CAAC;QAEV,OAAO;YACL,YAAY,CAAC,OAAO,CAAC,CAAC;SACvB,CAAC;KACH,mBAAG,KAAK,GAAK,IAAI,EAAE,CAAC;AACvB;;;;"}