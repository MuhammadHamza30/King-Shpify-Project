'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../_virtual/_tslib.js');
var React = require('react');
var createHash = require('./create-hash.js');

/**
 * Returns a hash of the given `value`. This is useful for comparing objects
 * deeply. For example, if the contents of an array are referenced inside a
 * `useEffect`, you can pass the hashed array to the effect dependencies to
 * invoke it when the array updates.
 */
function useHash(value) {
    var _a = _tslib.__read(React.useState(createHash.createHash(typeof value === 'undefined' ? null : '')), 2), hash = _a[0], setHash = _a[1];
    React.useEffect(function () {
        if (value)
            setHash(createHash.createHash(value));
    }, [value]);
    return hash;
}

exports.useHash = useHash;
//# sourceMappingURL=index.js.map
