{"version":3,"file":"index.js","sources":["../../../../src/hooks/use-timer/index.ts"],"sourcesContent":["import { DependencyList, EffectCallback, useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\nimport { useCompare } from '../use-compare';\n\nexport interface TimerHook {\n  /**\n   * Starts the timer.\n   */\n  start: () => void;\n\n  /**\n   * Pauses the timer. This function has no effect if the timer has not yet\n   * started.\n   */\n  pause: () => void;\n\n  /**\n   * Resumes the timer. This function has no effect if the timer has not yet\n   * started.\n   */\n  resume: () => void;\n\n  /**\n   * Resets the timer.\n   *\n   * @param newLength - Optionally provide a new timer length (in milliseconds).\n   * @param newTick - Optionally provide a new tick length (in milliseconds).\n   */\n  reset: (newLength?: number, newTick?: number) => void;\n\n  /**\n   * A function returning the amount of time (in milliseconds) remaining in the\n   * timer.\n   */\n  getRemaining: () => number;\n\n  /**\n   * A function returning the total expected length of the timer (in\n   * milliseconds).\n   */\n  getLength: () => number;\n\n  /**\n   * A function returning `true` or `false` indicating whether the timer is\n   * currently running.\n   */\n  isRunning: () => boolean;\n\n  /**\n   * References a static value that updates whenever the timer state changes.\n   * You can give this value to the dependency list `React.useEffect` to trigger\n   * an effect.\n   */\n  key: number;\n}\n\n/**\n * Returns a timer that works inside the React lifecycle.\n *\n * @param length - The total length of the timer (in milliseconds).\n * @param tick - The interval at which to update the timer (in milliseconds).\n */\nexport function useTimer(options: { length: number; tick?: number; autoStart?: boolean }): TimerHook {\n  const { length, tick = 1000, autoStart = false } = options;\n\n  const remaining = useRef(length);\n  const isRunning = useRef(autoStart);\n  const isStarted = useRef(autoStart);\n  const lengthRef = useRef(length);\n  const tickRef = useRef(tick);\n\n  const [key, forceUpdate] = useReducer((x: number) => x + 1, 0) as [number, () => void];\n\n  // Save the latest `tick` value.\n  useEffect(() => {\n    tickRef.current = tick;\n  }, [tick]);\n\n  // Save the latest `length` value.\n  useEffect(() => {\n    lengthRef.current = length;\n  }, [length]);\n\n  // Build timer functionality callbacks.\n\n  const start = useCallback(() => {\n    if (!isRunning.current && !isStarted.current) {\n      isRunning.current = true;\n      isStarted.current = true;\n      forceUpdate();\n    }\n  }, []);\n\n  const pause = useCallback(() => {\n    if (isRunning.current) {\n      isRunning.current = false;\n      forceUpdate();\n    }\n  }, []);\n\n  const resume = useCallback(() => {\n    if (!isRunning.current && isStarted.current) {\n      isRunning.current = true;\n      forceUpdate();\n    }\n  }, []);\n\n  const reset = useCallback((newLength?: number, newTick?: number) => {\n    if (newTick) tickRef.current = newTick;\n    if (newLength) lengthRef.current = newLength;\n    if (isRunning.current) isRunning.current = false;\n    remaining.current = newLength || lengthRef.current;\n    isStarted.current = false;\n    forceUpdate();\n  }, []);\n\n  // Update the timer.\n  useEffect(() => {\n    if (isRunning.current && remaining.current > 0) {\n      const id = setTimeout(() => {\n        remaining.current -= tickRef.current;\n        forceUpdate();\n      }, tickRef.current);\n\n      return () => clearTimeout(id);\n    }\n\n    if (isRunning.current && remaining.current === 0) {\n      isRunning.current = false;\n      forceUpdate();\n    }\n\n    if (isRunning.current && remaining.current < 0) {\n      remaining.current = 0;\n      isRunning.current = false;\n      forceUpdate();\n    }\n\n    return undefined;\n  }, [key]);\n\n  return useMemo<TimerHook>(\n    () => ({\n      start,\n      pause,\n      resume,\n      reset,\n      getRemaining: () => remaining.current,\n      getLength: () => lengthRef.current,\n      isRunning: () => isRunning.current,\n      key,\n    }),\n    [start, pause, resume, reset, key],\n  );\n}\n\n/**\n * Execute an effect if the supplied timer ticks.\n *\n * @param timer - The `TimerHook` object to base effects from.\n * @param effect - Imperative function that can return a cleanup function.\n * @param deps - If present, effect will only activate if the values in the list change.\n */\nexport function useTimerEffect(timer: TimerHook, effect: EffectCallback, deps: DependencyList = []) {\n  const didTimerChange = useCompare(timer.getRemaining());\n  const savedCallback = useRef(effect);\n\n  useEffect(() => {\n    savedCallback.current = effect;\n  }, [effect]);\n\n  useEffect(() => {\n    if (timer.isRunning() && didTimerChange && timer.getRemaining() > 0) {\n      return savedCallback.current();\n    }\n\n    return undefined;\n  }, [timer.key, ...deps]);\n}\n\n/**\n * Execute an effect if the supplied timer completes.\n *\n * @param timer - The `TimerHook` object to base effects from.\n * @param effect - Imperative function that can return a cleanup function.\n * @param deps - If present, effect will only activate if the values in the list change.\n */\nexport function useTimerComplete(timer: TimerHook, effect: EffectCallback, deps: DependencyList = []) {\n  const didTimerChange = useCompare(timer.getRemaining());\n  const savedCallback = useRef(effect);\n\n  useEffect(() => {\n    savedCallback.current = effect;\n  }, [effect]);\n\n  useEffect(() => {\n    if (didTimerChange && timer.getRemaining() <= 0) {\n      return savedCallback.current();\n    }\n\n    return undefined;\n  }, [timer.key, ...deps]);\n}\n"],"names":["useRef","__read","useReducer","useEffect","useCallback","useMemo","useCompare"],"mappings":"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"}