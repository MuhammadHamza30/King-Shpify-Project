{"version":3,"file":"index.js","sources":["../../../../src/hooks/use-async-effect/index.ts"],"sourcesContent":["import { DependencyList, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { useIsMounted } from '../use-is-mounted';\n\ntype NonVoid<T> = T extends void ? never : T;\n\ntype NarrowedAsyncEffect<TContext, TResult, TVisited extends string | void, TNarrow extends string> = Omit<\n  AsyncEffect<TContext, TResult, TVisited | TNarrow>,\n  NonVoid<TVisited> | TNarrow\n>;\n\ninterface AsyncEffect<TContext, TResult, TVisited extends string | void = void> {\n  /**\n   * Registers a callback to execute when the async handler resolves. Analagous\n   * to `Promise.then`.\n   */\n  fullfilled(\n    onfulfilled?: ((value: TResult, context: Partial<TContext>) => void) | null,\n  ): NarrowedAsyncEffect<TContext, TResult, TVisited, 'fullfilled'>;\n\n  /**\n   * Registers a callback to execute when the async handler rejects. Analagous\n   * to `Promise.catch`.\n   */\n  rejected(\n    onrejected?: ((reason: any, context: Partial<TContext>) => void) | null,\n  ): NarrowedAsyncEffect<TContext, TResult, TVisited, 'rejected'>;\n\n  /**\n   * Registers a callback to execute when the async handler completes, whether\n   * successfully or not. Analagous to `Promise.finally`.\n   */\n  settled(\n    onsettled?: ((context: Partial<TContext>) => void) | null,\n  ): NarrowedAsyncEffect<TContext, TResult, TVisited, 'settled'>;\n\n  /**\n   * Registers a callback to execute when the underlying `React.useEffect` is\n   * cleaned up.\n   */\n  cleanup(\n    onfulfilled?: ((context: Partial<TContext>) => void) | null,\n  ): NarrowedAsyncEffect<TContext, TResult, TVisited, 'cleanup'>;\n}\n\n/**\n * Makes asynchronous work inside the React lifecycle easy with automatic guards\n * against updating internal component state if the component is unmounted\n * before the async work is finished.\n */\nexport function useAsyncEffect<TContext extends { [key: string]: any } = { [key: string]: any }, TResult = any>(\n  handler: (context: Partial<TContext>) => Promise<TResult>,\n  deps?: DependencyList,\n): AsyncEffect<TContext, TResult> {\n  const thenCallback = useRef<any>();\n  const registerThenCb = useCallback((onfulfilled) => {\n    thenCallback.current = onfulfilled;\n    return chain;\n  }, []);\n\n  const catchCallback = useRef<any>();\n  const registerCatchCb = useCallback((onrejected) => {\n    catchCallback.current = onrejected;\n    return chain;\n  }, []);\n\n  const finallyCallback = useRef<any>();\n  const registerFinallyCb = useCallback((onsettled) => {\n    finallyCallback.current = onsettled;\n    return chain;\n  }, []);\n\n  const cleanupCallback = useRef<any>();\n  const registerCleanupCb = useCallback((oncleanup) => {\n    cleanupCallback.current = oncleanup;\n    return chain;\n  }, []);\n\n  const chain: any = useMemo(() => {\n    return {\n      fullfilled: registerThenCb,\n      rejected: registerCatchCb,\n      settled: registerFinallyCb,\n      cleanup: registerCleanupCb,\n    };\n  }, []);\n\n  const isMounted = useIsMounted();\n  useEffect(() => {\n    const context: any = {};\n\n    handler(context)\n      .then((value) => {\n        if (isMounted() && thenCallback.current) thenCallback.current(value, context);\n      })\n      .catch((err) => {\n        if (isMounted() && catchCallback.current) catchCallback.current(err, context);\n      })\n      .finally(() => {\n        if (isMounted() && finallyCallback.current) finallyCallback.current(context);\n      });\n\n    if (cleanupCallback.current) return () => cleanupCallback.current(context);\n    return undefined;\n  }, deps);\n\n  return chain;\n}\n"],"names":["useRef","useCallback","useMemo","useIsMounted","useEffect"],"mappings":";;;;;;;AA4CA;;;;;SAKgB,cAAc,CAC5B,OAAyD,EACzD,IAAqB;IAErB,IAAM,YAAY,GAAGA,YAAM,EAAO,CAAC;IACnC,IAAM,cAAc,GAAGC,iBAAW,CAAC,UAAC,WAAW;QAC7C,YAAY,CAAC,OAAO,GAAG,WAAW,CAAC;QACnC,OAAO,KAAK,CAAC;KACd,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,aAAa,GAAGD,YAAM,EAAO,CAAC;IACpC,IAAM,eAAe,GAAGC,iBAAW,CAAC,UAAC,UAAU;QAC7C,aAAa,CAAC,OAAO,GAAG,UAAU,CAAC;QACnC,OAAO,KAAK,CAAC;KACd,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,eAAe,GAAGD,YAAM,EAAO,CAAC;IACtC,IAAM,iBAAiB,GAAGC,iBAAW,CAAC,UAAC,SAAS;QAC9C,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC;QACpC,OAAO,KAAK,CAAC;KACd,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,eAAe,GAAGD,YAAM,EAAO,CAAC;IACtC,IAAM,iBAAiB,GAAGC,iBAAW,CAAC,UAAC,SAAS;QAC9C,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC;QACpC,OAAO,KAAK,CAAC;KACd,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,KAAK,GAAQC,aAAO,CAAC;QACzB,OAAO;YACL,UAAU,EAAE,cAAc;YAC1B,QAAQ,EAAE,eAAe;YACzB,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,iBAAiB;SAC3B,CAAC;KACH,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,SAAS,GAAGC,kBAAY,EAAE,CAAC;IACjCC,eAAS,CAAC;QACR,IAAM,OAAO,GAAQ,EAAE,CAAC;QAExB,OAAO,CAAC,OAAO,CAAC;aACb,IAAI,CAAC,UAAC,KAAK;YACV,IAAI,SAAS,EAAE,IAAI,YAAY,CAAC,OAAO;gBAAE,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAC/E,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,IAAI,SAAS,EAAE,IAAI,aAAa,CAAC,OAAO;gBAAE,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;SAC/E,CAAC;aACD,OAAO,CAAC;YACP,IAAI,SAAS,EAAE,IAAI,eAAe,CAAC,OAAO;gBAAE,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC9E,CAAC,CAAC;QAEL,IAAI,eAAe,CAAC,OAAO;YAAE,OAAO,cAAM,OAAA,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,CAAC;QAC3E,OAAO,SAAS,CAAC;KAClB,EAAE,IAAI,CAAC,CAAC;IAET,OAAO,KAAK,CAAC;AACf;;;;"}