@import (reference) '../../../styles/index.less';

.createButtonStyles(@baseColor, @textColor, @borderColor: transparent) {
  @themedBaseColor: #mg.getThemeColor(@baseColor);
  @themedTextColor: #mg.getThemeColor(@textColor);

  // Positioning / Alignment
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  box-sizing: border-box;

  // Margins / Paddings
  margin: 0;
  padding: 2px;
  &.size_sm { padding: 6px 16px; }
  &.size_md { padding: 12px 24px; }
  &.size_lg { padding: 16px 24px; }

  // Border / Background
  border: 1px @borderColor solid;
  border-radius: #mg()[maxInt] * 1px;
  background-color: @themedBaseColor[];


  // Transition
  transition: 0.2s;
  will-change: transform, color;

  // Etc.
  cursor: pointer;
  * { cursor: pointer; }
  &.disabled, &.validating {
    cursor: not-allowed;
    * { cursor: not-allowed; }
  }

  // Focus Styles
  outline: none;
  .focusRing {
    position: absolute;
    top: -5px;
    left: -5px;
    width: calc(100% + 10px);
    height: calc(100% + 10px);
    border: solid 2px @themedTextColor[];
    border-radius: #mg()[maxInt] * 1px;
    box-sizing: border-box;
  }

  &.disabled {
    opacity: 0.3;
  }

  * { --mg__Icon_colorA: @themedTextColor[]; }

  .buttonLabel {
    display: flex;
    align-items: center;
    justify-content: center;
    color: @themedTextColor[];
    width: 100%;

    white-space: nowrap;
    font-weight: 600;
    text-align: center;

    transition: all 0.2s ease;
  }

  &.size_sm .buttonLabel {
    font-size: 14px;
    line-height: 24px;
  }

  &.size_md .buttonLabel {
    font-size: 18px;
    line-height: 28px;
  }

  &.size_lg .buttonLabel {
    font-size: 18px;
    line-height: 28px;
  }

  &:not(.disabled, .validating):hover {
    #mg.themeProperty(background-color, @themedBaseColor[darker], @themedBaseColor[lighter]);
  }

  &:not(.disabled, .validating).active {
    opacity: 0.5;
  }
}

button.Button {
  // Disable default <button> styles
  outline: none;
  * { user-select: none; }
}

a.Button {
  // Disable default <a> styles
  outline: none;
  text-decoration: none;
  * { user-select: none; }
}

button.Button, a.Button {
  &.color_primary { .createButtonStyles('primary', 'light'); }
  &.color_v2secondary { .createButtonStyles('v2secondary', 'primary'); }
  &.color_v2tertiary { .createButtonStyles('v2tertiary', 'dark', #DDDBE0); } /* @ink30 */
  &.color_negative { .createButtonStyles('negative', 'light'); }
  &.color_neutral { .createButtonStyles('neutral', 'dark'); }
}
